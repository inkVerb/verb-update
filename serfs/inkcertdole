#!/bin/bash
#inkVerbSerf! verb.ink

# This batch runs inkCert-Letsencrypt request and install scripts for a given domain, including inkVerb namespace domains
## It also applies to all subdomains for that domain
## Prereqesite: inkcertinstall

# How to use:
## ./inkcertdole [ domain.tld NO SUBDOMAINS ] [ r (optional) ]

#Eg:
## ./inkcertdole inkisaverb.com
## ./inkcertdole inkisaverb.com r
## ./inkcertdole YOURNAME.verb.blue

usagenotes="This batch runs inkCert-Letsencrypt request and install scripts for a given domain, including inkVerb namespace domains"
usageformat="inkcertdole [ domain.tld NO SUBDOMAINS ] [ r (optional) ]"
usageexample="inkcertdole inkisaverb.com
inkcertdole inkisaverb.com r
inkcertdole YOURNAME.verb.one"
hierarchy=( primary )	# Choose: primary (works by itself, may use secondaries or tertiaries); secondary (can work by itself, but not normally, may use other secondaries or tertiaries); tertiary (cannot run by itself, must be run by a secondary or primary);oversight (uses primaries)
vsetnames=( "Domain" )	# "Pretty" names for each setting, must be in order of settings
vsettypes=( isDomain )
voptnames=(  )
vopttypes=(  )
voptflags=(  )
voptflagpurpose=(  )
dependencyinstall=( inkcertinstall )
prerequesite=( inkcertinstall )
usedby=( inkcertdole-all-verbs inknetmakeca )
useserfs=( inkcertreqle inkcertaddallle setinkcertmailcerts )
useconfigs=( siteurilist )	# List config files of any kind used in this serf, please preserve order of appearance
if [ -n "$infoINKonly" ] && [ "$infoINKonly" = "true" ]; then return 0; fi # Must have for proper usage to not run the full serf
if [ -e "/opt/verb/mods/inkcertdole.replace" ]; then . /opt/verb/mods/inkcertdole.replace; return 0; fi # Precedes this script
if [ -e "/opt/verb/mods/inkcertdole.before" ]; then . /opt/verb/mods/inkcertdole.before; return 0; fi # Replaces this script


DOMAIN=$1

# Refresh option
if [ -n "$2" ] && [ "$2" = "r" ]; then
  SUFFIX=" r"
else
  SUFFIX=""
fi

# Check inkCert installed
if [ "${INKCERTINSTALLED}" = "NOT_YET" ]; then
/bin/echo "inkCert not yet installed.

First run inkcertinstall
"
exit 0
fi

# Check variables
if [ -z ${1} ]; then
/bin/echo "You need to specify a domain. Read the instructions."; exit 0
fi

# Request and get the certs
/opt/verb/serfs/inkcertreqle ${DOMAIN}${SUFFIX}; wait
if [ "$certsuccess" != "true" ]; then
  /bin/echo "Cert for ${DOMAIN} aborted."
  exit 4;
fi

# Install the certs
if /bin/grep -q "INKCERTED=NO" /opt/verb/conf/inkcert/cli-ini/siteinkcert.${DOMAIN}; then
  if [ -e /etc/inkcert/le/live/${DOMAIN} ]; then
    /opt/verb/serfs/inkcertaddallle ${DOMAIN}; wait
  fi
fi

# Domain check for mail certs
. /opt/verb/conf/siteurilist
if [ "${DOMAIN}" = "${nameURI}" ] || [ "${DOMAIN}" != "${emailTLD}" ] && [ "${DOMAIN}" != "${hostURI}" ] && [ "${DOMAIN}" != "${serveURI}" ] && [ "${DOMAIN}" != "${emailTLDURI}" ] && [ "${DOMAIN}" != "${emailURI}" ] && [ "${DOMAIN}" != "${oneURI}" ] && [ "${DOMAIN}" != "${inkURI}" ] && [ "${DOMAIN}" != "${blueURI}" ] && [ "${DOMAIN}" != "${vipURI}" ] && [ "${DOMAIN}" != "${kiwiURI}" ] && [ "${DOMAIN}" != "${redURI}" ]; then
  /opt/verb/serfs/setinkcertmailcerts ${DOMAIN}
fi

# Update the inkCert-DOMAIN config file, fail silently (eg. when used on subdomains)
/bin/sed -i "s/INKCERTED=.*/INKCERTED=DONE_LE/" /opt/verb/conf/inkcert/cli-ini/siteinkcert.${DOMAIN} 2> /dev/null

# Finish
/bin/echo "
Excellent!
Verify above exits - IMPORTANT NOTES: ... - Congratulations!

If so, then ${DOMAIN} and all subdomains are now live with inkCert Letsencrypt certificates.
"




if [ -e "/opt/verb/mods/inkcertdole.after" ]; then . /opt/verb/mods/inkcertdole.after; fi # Follows this script
