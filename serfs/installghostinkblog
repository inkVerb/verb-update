#!/bin/bash
#inkVerbSerf! verb.ink

# This installs ghost as an app to be connected to blog.your-name.verb.ink

# You MUST HAVE EMAIL SETUP with an email address. Once you set this password you can't change it. Probably ghost@your-name.verb.ink

# Ghost Port: Only the blog.YOU.verb.ink URI uses 2368, domains use higher ports.

# NOTE: Put the email password in "double quotes" to avoid problems with special characters.

# How to use:
## ./installghostinkblog [emailusername] "[emailpassword]" [new ghost port]

CVAPPNAME=ghost.inkblog

# Include the configs
. /opt/verb/conf/sitenameip
. /opt/verb/conf/siteurilist

EMAILUSER=$1
EMAILPASS=$2
NEWPORT=$3
DOMAIN="i.${inkURI}"

# Basic credential check
if [ -z ${3} ]; then
/bin/echo "You need to set all four variables (domain, ghost port, email, and password) to install Ghost to a domain. See \"How to use\" in the serf."
exit 5
fi

# Include settings
. /opt/verb/conf/sitenameip

# Install Node.js (LTS req by Ghost, this is v 14.x)
/usr/bin/pacman -S --noconfirm nodejs-lts-fermium

# Install NVM
## (We are not setting it for use on the command line in the bash startup script)
## Use installnvm to install NVM for use on the command line
/usr/bin/su slave -c '/usr/bin/yay -S --noconfirm nvm'
## Source NVM
source /usr/share/nvm/init-nvm.sh

# Install Ghost
cd /srv/www/ghost || exit 0
/usr/bin/curl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip
/usr/bin/unzip -uo ghost.zip -d ghostblog
/bin/rm -f ghost.zip

## Now install it with npm
cd /srv/www/ghost/ghostblog || exit 0
npm install --production

# Set up the Ghost config
cd /srv/www/ghost/ghostblog || exit 0
/bin/cp config.example.js config.js
/bin/sed -i "s/url: 'http:\/\/my-ghost-blog.com'/url: 'http:\/\/${DOMAIN}\/ghost'/g" config.js
/bin/sed -i "s/host: '127.0.0.1'/host: '${SITEIP}'/g" config.js
/bin/sed -i "s/2368/${NEWPORT}/g" config.js
/bin/sed -i "s/mail: {}/mail: {transport: 'SMTP', options: {host: 'localhost', port: 25, service: 'dovecot', auth: {user: '${EMAILUSER}', pass: '${EMAILPASS}'}}}/g" config.js

# Set UFW to allow the Ghost port
/usr/bin/ufw allow ${NEWPORT}

# Reset all permissions
/bin/rm -f /verb/ink.i/ghost
/bin/echo "Ghost Site" > /verb/ink.i/ghost
/bin/chown -R www:www /srv/www/vapps/${CVAPPNAME}.${DOMAIN}

# Web server
. /opt/verb/conf/servertype
if [ ${SERVERTYPE} = "laemp" ] || [ ${SERVERTYPE} = "lemp" ]; then
  /bin/rm -f /opt/verb/conf/webserver/nginx/sites-available/${DOMAIN}.conf
  /bin/cp -f /opt/verb/conf/site-files/conf/newnginxghostinkblog.conf /opt/verb/conf/webserver/nginx/sites-available/${DOMAIN}.conf
  /bin/sed -i "s/ghostsite286/${DOMAIN}/g" /opt/verb/conf/webserver/nginx/sites-available/${DOMAIN}.conf
  /bin/sed -i "s/2368/${NEWPORT}/g" /opt/verb/conf/webserver/nginx/sites-available/${DOMAIN}.conf
  /bin/sed -i "s/ip286/${SITEIP}/g" /opt/verb/conf/webserver/nginx/sites-available/${DOMAIN}.conf
elif [ ${SERVERTYPE} = "lamp" ]; then
  /bin/rm -f /opt/verb/conf/webserver/httpd/sites-available/${DOMAIN}.conf
  /bin/cp -f /opt/verb/conf/site-files/conf/newghostinkblog.conf /opt/verb/conf/webserver/httpd/sites-available/${DOMAIN}.conf
  /bin/sed -i "s/ghostsite286/${DOMAIN}/g" /opt/verb/conf/webserver/httpd/sites-available/${DOMAIN}.conf
  /bin/sed -i "s/2368/${NEWPORT}/g" /opt/verb/conf/webserver/httpd/sites-available/${DOMAIN}.conf
  /bin/sed -i "s/ip286/${SITEIP}/g" /opt/verb/conf/webserver/httpd/sites-available/${DOMAIN}.conf
fi

## inkCert SSL certs
### Not setup
if /bin/grep -Fq "INKCERTED=NO" /opt/verb/conf/inkcert/cli-ini/siteinkcert.${DOMAIN}; then
/bin/echo "FYI: inkCert is not yet setup for ${DOMAIN}."
fi
### inkCert-LE DONE
if /bin/grep -Fq "INKCERTED=DONE_LE" /opt/verb/conf/inkcert/cli-ini/siteinkcert.${DOMAIN}; then
/bin/echo "inkCert-LE is already setup for ${DOMAIN}. Updating the Apache configs..."
/opt/verb/serfs/inkcertaddle ${DOMAIN}
wait
fi
### inkCert-CBSINGLE DONE
if /bin/grep -Fq "INKCERTED=DONE_CBSINGLE" /opt/verb/conf/inkcert/cli-ini/siteinkcert.${DOMAIN}; then
/bin/echo "inkCert-CBSINGLE is already setup for ${DOMAIN}. Updating the Apache configs..."
/opt/verb/serfs/inkcertaddcbsingle ${DOMAIN}
wait
fi
### inkCert-CB DONE
if /bin/grep -Fq "INKCERTED=DONE_CB" /opt/verb/conf/inkcert/cli-ini/siteinkcert.${DOMAIN}; then
/bin/echo "inkCert-CB is already setup for ${DOMAIN}. Updating the Apache configs..."
/opt/verb/serfs/inkcertaddcb ${DOMAIN}
wait
fi

## Restert webserver
if [ ${SERVERTYPE} = "laemp" ] || [ ${SERVERTYPE} = "lemp" ]; then
  /usr/bin/systemctl restart nginx
elif [ ${SERVERTYPE} = "lamp" ]; then
  /usr/bin/systemctl restart httpd
fi

# Make it a service at startup
/bin/cp /opt/verb/conf/site-files/conf/ghostsite.conf /etc/init/ghostsite-${DOMAIN}.conf
/bin/sed -i "s/ghostsite/ghostsite-${DOMAIN}/g" /etc/init/ghostsite-${DOMAIN}.conf
/bin/sed -i "s/ghostdomain286/${DOMAIN}/g" /etc/init/ghostsite-${DOMAIN}.conf

# Write the config for backup
/bin/echo "#!/bin/bash
GHOSTPORT=\"${NEWPORT}\"
GHOSTEMAIL=\"${EMAILUSER}\"
GHOSTEMLPAS=\"${EMAILPASS}\"" > /opt/verb/conf/vapp.${CVAPPNAME}

# Record the port in the Ghost port inklist
/bin/echo "${DOMAIN} ${NEWPORT}" >> /opt/verb/conf/inklists/ghostsiteports

# Set the site-wide inkblog config
/bin/sed -i "s/INKblog=.*/INKblog=\"Ghost\"/g" /opt/verb/conf/siteinstallstatus

### Below (Forever) is expirimental on inkVerb, but working, and should be replaced with a way to run Ghost as a proper service at startup
# Run Ghost with Forever
npm install -g forever
## Production forever
cd /srv/www/ghost/ghostblog && NODE_ENV=production forever start index.js || exit 0
## Non-production / developer forever
#forever start index.js
## If you want, stop Forever with:
### cd /srv/www/ghost/ghostblog && forever stop index.js

##### Don't use this normally because it halts the current script and does not finish the rest of the jobs
## Start Ghost only for this server session
#cd /srv/www/ghost/ghostblog
#npm start --production
#####

# Finish
/bin/echo "Ghost is setup.
Go to http://${DOMAIN}/ghost/ghost to install."




if [ -e "/opt/verb/mods/installghostinkblog.after" ]; then . /opt/verb/mods/installghostinkblog.after; fi # Follows this script
