#!/bin/bash
# inkVerb updater for Verber™, verb.ink

#set -e

# This "updates" the serfs and "upgrades" Verber
## serfs are updated every time. Upgrades only relate to Verber framework which has verber version numbers related to each patch/release.
## This contains many version patches for a Verber™ sequentially, one version at a time.
## This is run at the path: /opt/verb/${VUPDATE_Repo}/update

# To call a changelog for a specific version, use: `/bin/echo "$vCLEANVERNO"` Eg: `echo "$v08702"` for v0.87.02

# DEV NOTE: A directory, even empty, must exist in the same directory as this "update" file named by by each update version ie: 0.87.01/

# DEV NOTE: Larger versions must be at the bottom, smaller versions at the top, so "descending"

# DEV INSTRUCTIONS: Put all related files for each patch in a folder named by the version number, ie: 0.87.01/

# DEV NOTE: Serfs are automatically copied & updated from ${VUPDATE_Repo}/serfs to the Verber before any patches run, after the verno check.


MIN_VERNO=0.90.00
VUPDATE_Repo="verb-update"

## Sample version updater:
#UPGRADE_PATCH_VERNO=0.88.02
#if [ $(/bin/echo ${UPGRADE_PATCH_VERNO} | /bin/sed -e "s/\.//g" | /bin/sed -e "s/^0*//g") -gt $(/bin/echo ${VERNO} | /bin/sed -e "s/\.//g" | /bin/sed -e "s/^0*//g") ] ; then
#CLEAN_PATCH_VERNO=$(/bin/echo $UPGRADE_PATCH_VERNO | /bin/sed -e "s/\.//g")
#PCLdoc="$(/bin/cat <<UPCL
#Patch ${UPGRADE_PATCH_VERNO} Changelog:
### Patch Notes Here...
#UPCL
#)"
#/bin/echo "$PCLdoc"
## So we can call a specific version later if needed
#eval "v$CLEAN_PATCH_VERNO='$(/bin/echo "$PCLdoc")'"
#
## Move to working directory of the patch
#if [ -d "/opt/verb/${VUPDATE_Repo}/${UPGRADE_PATCH_VERNO}/" ]; then
#cd /opt/verb/${VUPDATE_Repo}/${UPGRADE_PATCH_VERNO}/; fi
#
## Run the update scripts for this patch
#
###### SCRIPTS GO HERE #####
## NOTE: PWD is /opt/verb/${VUPDATE_Repo}/${UPGRADE_PATCH_VERNO}/
#
## eg: /bin/echo "I would update the serfs here, but that happens automatically."
#
#
#
###### END SCRIPTS #########
## Set and refresh the current version into inklists
#/bin/sed -i "s/VERNO=.*/VERNO=\"${UPGRADE_PATCH_VERNO}\"/g" /opt/verb/conf/inklists/verberverno
#. /opt/verb/conf/inklists/verberverno
#/bin/echo "Verber upgraded to v${VERNO}"
#else
#/bin/echo "${UPGRADE_PATCH_VERNO} patch not necessary..."
#fi
###############END#UPGRADE#PATCH#


## Version Check ##
### The minimum version that can use this updater
## Include the configs
. /opt/verb/conf/servernameip
. /opt/verb/conf/siteurilist
. /opt/verb/conf/inklists/verberverno
. /opt/verb/conf/inklists/inkdnsrinks
## Check minimal updateable version
if [ "$(/bin/echo "${MIN_VERNO}" | /bin/sed -e "s/\.//g" | /bin/sed -e "s/^0*//g")" -gt "$(/bin/echo ${VERNO} | /bin/sed -e "s/\.//g" | /bin/sed -e "s/^0*//g")" ] ; then
/bin/echo "Current Verber™ version is ${VERNO}, minimum ${MIN_VERNO} to use this updater.
Run updateverberlegacy for older versions."
exit 0
fi

# Pull scripts and settings from the original verb repo
/usr/bin/mkdir -p /opt/verb/${VUPDATE_Repo}/u_tmp
cd /opt/verb/${VUPDATE_Repo}/u_tmp || exit 1
/usr/bin/git clone https://github.com/${ServerUpdateOrg}/verb
# Update Serfs
/bin/rm -rf /opt/verb/serfs/*
/bin/cp -f /opt/verb/${VUPDATE_Repo}/u_tmp/verb/serfs/* /opt/verb/serfs/
/bin/rm -rf /opt/verb/donjon/*.sh
/bin/cp -f /opt/verb/${VUPDATE_Repo}/u_tmp/verb/donjon/*.sh /opt/verb/donjon/
/bin/rm -rf /opt/verb/donjon/repoupdate/*.updaterepo
/bin/cp -f /opt/verb/${VUPDATE_Repo}/u_tmp/verb/donjon/repoupdate/*.updaterepo /opt/verb/donjon/repoupdate/
/bin/chmod 750 /opt/verb/serfs/*
/bin/chmod 750 /opt/verb/donjon/*.sh
cd /opt/verb || exit 1
/bin/rm -f README.md
/usr/bin/wget https://raw.githubusercontent.com/${ServerUpdateOrg}/verb/master/README.md
/bin/echo "Serfs updated."

# Update ink tools
/bin/rm -rf /opt/verb/ink/felt/*
/bin/rm -rf /opt/verb/ink/help/*
/bin/cp -f /opt/verb/${VUPDATE_Repo}/u_tmp/verb/ink/felt/* /opt/verb/ink/felt/
/bin/cp -f /opt/verb/${VUPDATE_Repo}/u_tmp/verb/ink/help/* /opt/verb/ink/help/
/bin/cp -f /opt/verb/${VUPDATE_Repo}/u_tmp/verb/ink/PHPcities /opt/verb/ink/
/bin/cp -f /opt/verb/${VUPDATE_Repo}/u_tmp/verb/ink/actions.pb /opt/verb/ink/
/bin/cp -f /opt/verb/${VUPDATE_Repo}/u_tmp/verb/ink/ink /opt/verb/ink/
/bin/cp -f /opt/verb/${VUPDATE_Repo}/u_tmp/verb/ink/ink.functions /opt/verb/ink/
/bin/cp -f /opt/verb/${VUPDATE_Repo}/u_tmp/verb/ink/ink.run /opt/verb/ink/
/bin/chmod 750 /opt/verb/ink/felt/*
/bin/echo "Ink actions updated."

# Update inkLists
. /opt/verb/conf/serverinkget
if [ "${InkGet_List}" = "AUTO_UPDATE" ]; then
  /bin/cp -f /opt/verb/${VUPDATE_Repo}/u_tmp/verb/conf/inklists/repoverlist /opt/verb/conf/inklists/
  /bin/cp -f /opt/verb/${VUPDATE_Repo}/u_tmp/verb/conf/inklists/repolinks /opt/verb/conf/inklists/
  if [ -z "$CUSTOMRINK" ] || [ "$CUSTOMRINK" != "true" ]; then
    /bin/cp -f /opt/verb/${VUPDATE_Repo}/u_tmp/verb/conf/inklists/inkdnsrinks /opt/verb/conf/inklists/
  fi
  /bin/echo "Repo version list updated."
else
  /bin/echo "Repo version list unchanged because this is a custom Verber."
fi

# Update MOTD
/usr/bin/cp -f /opt/verb/${VUPDATE_Repo}/u_tmp/verb/conf/lib/nib /opt/verb/conf/lib/
/usr/bin/cat /opt/verb/conf/lib/nib > /etc/motd

# Update ClamAV
# /bin/cp -f /opt/verb/${VUPDATE_Repo}/u_tmp/verb/conf/lib/vmail/clamav/clamav /opt/verb/donjon/
# /bin/chmod 640 /opt/verb/donjon/clamav
# /bin/echo "ClamAV definitions ready."
# . /opt/verb/conf/servermailpath
# if [ "${ServerMailStatus}" != "EMAIL_NOT_INSTALLED" ] && [ -d "/var/lib/clamav" ] && [ "${SASTATUS}" = "INSTALLED" ]; then
#   . /opt/verb/donjon/clamav
#   /usr/bin/mv -f /var/lib/clamav/main.cvd /var/lib/clamav/main.cvd.bak 2>/dev/null
#   /usr/bin/mv -f /var/lib/clamav/daily.cvd /var/lib/clamav/daily.cvd.bak 2>/dev/null
#   /usr/bin/mv -f /var/lib/clamav/bytecode.cvd /var/lib/clamav/bytecode.cvd.bak 2>/dev/null
#   /usr/bin/wget https://inkisaverb.com/${CLAMDL}/main.cvd -P /var/lib/clamav/
#   /usr/bin/wget https://inkisaverb.com/${CLAMDL}/daily.cvd -P /var/lib/clamav/
#   /usr/bin/wget https://inkisaverb.com/${CLAMDL}/bytecode.cvd -P /var/lib/clamav/
#   cd /var/lib/clamav/
#   if [ -f "/var/lib/clamav/main.cvd" ] && [ "$(/usr/bin/sha256sum main.cvd)" = "${SHAmain}" ]; then
#     /usr/bin/rm -f /var/lib/clamav/main.cvd.bak
#   else
#     /usr/bin/rm -f /var/lib/clamav/main.cvd
#     /usr/bin/mv -f /var/lib/clamav/main.cvd.bak /var/lib/clamav/main.cvd 2>/dev/null
#   fi
#   if [ -f "/var/lib/clamav/daily.cvd" ] && [ "$(/usr/bin/sha256sum daily.cvd)" = "${SHAdaily}" ]; then
#     /usr/bin/rm -f /var/lib/clamav/daily.cvd.bak
#   else
#     /usr/bin/rm -f /var/lib/clamav/daily.cvd
#     /usr/bin/mv -f /var/lib/clamav/daily.cvd.bak /var/lib/clamav/daily.cvd 2>/dev/null
#   fi
#   if [ -f "/var/lib/clamav/bytecode.cvd" ] && [ "$(/usr/bin/sha256sum bytecode.cvd)" = "${SHAbytecode}" ]; then
#     /usr/bin/rm -f /var/lib/clamav/bytecode.cvd.bak
#   else
#     /usr/bin/rm -f /var/lib/clamav/bytecode.cvd
#     /usr/bin/mv -f /var/lib/clamav/bytecode.cvd.bak /var/lib/clamav/bytecode.cvd 2>/dev/null
#   fi
#   cd $OLDPWD
#   /usr/bin/chown clamav:clamav /var/lib/clamav/main.cvd
#   /usr/bin/chown clamav:clamav /var/lib/clamav/daily.cvd
#   /usr/bin/chown clamav:clamav /var/lib/clamav/bytecode.cvd
#   /usr/bin/chmod 644 /var/lib/clamav/main.cvd
#   /usr/bin/chmod 644 /var/lib/clamav/daily.cvd
#   /usr/bin/chmod 644 /var/lib/clamav/bytecode.cvd
#   /bin/echo "ClamAV definitions updated."
# fi

# Run version-by-version updates


#UPGRADE_PATCH_VERNO=0.90.01
#if [ $(/bin/echo ${UPGRADE_PATCH_VERNO} | /bin/sed -e "s/\.//g" | /bin/sed -e "s/^0*//g") -gt $(/bin/echo ${VERNO} | /bin/sed -e "s/\.//g" | /bin/sed -e "s/^0*//g") ] ; then
#CLEAN_PATCH_VERNO="$(/bin/echo $UPGRADE_PATCH_VERNO | /bin/sed -e "s/\.//g")"
#PCLdoc="$(/bin/cat <<UPCL
#Patch ${UPGRADE_PATCH_VERNO} Changelog:
### Patch Notes Here...
#UPCL
#)"
#/bin/echo "$PCLdoc"
## So we can call a specific version later if needed
#eval "v$CLEAN_PATCH_VERNO='$(/bin/echo "$PCLdoc")'"
#
## Move to working directory of the patch
#if [ -d "/opt/verb/${VUPDATE_Repo}/${UPGRADE_PATCH_VERNO}/" ]; then
#cd /opt/verb/${VUPDATE_Repo}/${UPGRADE_PATCH_VERNO}/; fi
#
## Run the update scripts for this patch
#
###### SCRIPTS GO HERE #####
## NOTE: PWD is /opt/verb/${VUPDATE_Repo}/${UPGRADE_PATCH_VERNO}/
#
## eg: /bin/echo "I would update the serfs here, but that happens automatically."
#
#
#
###### END SCRIPTS #########
## Set and refresh the current version into inklists
#/bin/sed -i "s/VERNO=.*/VERNO=\"${UPGRADE_PATCH_VERNO}\"/g" /opt/verb/conf/inklists/verberverno
#. /opt/verb/conf/inklists/verberverno
#/bin/echo "Verber upgraded to v${VERNO}"
#else
#/bin/echo "${UPGRADE_PATCH_VERNO} patch not necessary..."
#fi
###############END#UPGRADE#PATCH#


# Security check
/opt/verb/serfs/setsecure; wait

# Note version in the MOTD
/usr/bin/echo "inkVerb ${ServerType} ${ServerName} // v${VERNO}" >> /etc/motd

# Ink is a verb. Ink.
/usr/bin/cat /opt/verb/conf/lib/nib

# Finish
/usr/bin/echo "Verber at v${VERNO} framework from ${ServerUpdateRepo}."
